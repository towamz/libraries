Option Explicit

Private FstRg_ As Range
Private SrcType_ As EnumSrcType
Private SrcDir_ As XlDirection
Private RowDir_ As Long
Private ColDir_ As Long

Public Enum EnumSrcType
    Number
    Text
End Enum

Public Property Let SearchType(arg1 As EnumSrcType)
    SrcType_ = arg1
End Property

Public Property Let SearchDirection(arg1 As XlDirection)
    SrcDir_ = arg1

    Select Case SrcDir_
        Case XlDirection.xlDown
            RowDir_ = 1
            ColDir_ = 0
        Case XlDirection.xlToRight
            RowDir_ = 0
            ColDir_ = 1
        Case XlDirection.xlUp
            RowDir_ = -1
            ColDir_ = 0
        Case XlDirection.xlToLeft
            RowDir_ = 0
            ColDir_ = -1
    End Select

End Property

Private Sub Class_Initialize()
    SearchType = Number
    SearchDirection = xlDown
End Sub


Public Function searchTargetRange(FirstRange As Variant) As Range
    Dim rg_src As Range
    Dim rowOffset As Long
    Dim colOffset As Long


    '最初のセルを変数に格納する
    Set rg_src = setFirstRange(FirstRange)
    
    Do
        DoEvents
        
        '現在のセルが該当セルの場合、そのセルを返す
        If isTargetRange(rg_src) Then
            Set searchTargetRange = rg_src
            Exit Function
        '現在のセルが最終のときはNothingを返す
        ElseIf isLastCell(rg_src) Then
            Set searchTargetRange = Nothing
            Exit Function
        '次のセルが空白でない時はひとつずつ確認する
        ElseIf Not isNextCellBlank(rg_src) Then
            rowOffset = 0
            colOffset = 0
            Do
                DoEvents
                '次のセルの参照に移る
                rowOffset = rowOffset + RowDir_
                colOffset = colOffset + ColDir_
            
                '現在のセルが該当セルの場合
                If isTargetRange(rg_src.Offset(rowOffset, colOffset)) Then
                    Set searchTargetRange = rg_src.Offset(rowOffset, colOffset)
                    Exit Function
                '現在のセルが最終のときはNothingを返す
                ElseIf isLastCell(rg_src.Offset(rowOffset, colOffset)) Then
                    Set searchTargetRange = Nothing
                    Exit Function
                End If
            
            '次のセルが空白の時は次のループにいく
            Loop Until isNextCellBlank(rg_src.Offset(rowOffset, colOffset))
            Set rg_src = rg_src.Offset(rowOffset, colOffset)
        
        '次のセルが空白の時は次のループにいく
'        Else
        End If
        
        '次のセルをendで取得する
        Set rg_src = rg_src.End(SrcDir_)
    Loop

End Function


Private Function setFirstRange(FirstRange As Variant) As Range
    '引数がrangeオブジェクト
    If TypeName(FirstRange) = "Range" Then
        Set setFirstRange = FirstRange
    '引数が文字列
    ElseIf VarType(FirstRange) = vbString Then
        Set setFirstRange = Range(FirstRange)
    Else
        Err.Raise 1099, , "不明なエラーです"
    End If

End Function


Private Function isNextCellBlank(rg As Range) As Boolean
    '現在のセルが最終の場合はoffset実行でエラー発生するのでfalseを返す
    If isLastCell(rg) Then
        isNextCellBlank = False
    ElseIf rg.Offset(RowDir_, ColDir_).Value = "" Then
        isNextCellBlank = True
    Else
        isNextCellBlank = False
    End If
End Function


Private Function isLastCell(rg As Range) As Boolean
    isLastCell = False
    
    Select Case SrcDir_
        '下方向→行番号:[最大]
        Case XlDirection.xlDown
            If rg.Row >= Rows.Count Then
                isLastCell = True
            End If
        '右方向→列番号:[最大]
        Case XlDirection.xlToRight
            If rg.Column >= Columns.Count Then
                isLastCell = True
            End If
        '上方向→行番号:[1]
        Case XlDirection.xlUp
            If rg.Row <= 1 Then
                isLastCell = True
            End If
        '左方向→列番号:[1]
        Case XlDirection.xlToLeft
            If rg.Column <= 1 Then
                isLastCell = True
            End If
    End Select
End Function


Private Function isTargetRange(rg As Range) As Boolean
    Select Case SrcType_
        Case EnumSrcType.Number
            'isnumericは空白でもtrue返すため空白チェック必要
            If rg.Value = "" Then
                isTargetRange = False
            Else
                isTargetRange = IsNumeric(rg.Value)
            End If
    
        Case EnumSrcType.Text
            isTargetRange = (VarType(rg.Value) = vbString)
    End Select
End Function

